package nl.knokko.customitems.drops;

import static nl.knokko.customitems.MCVersions.*;

import nl.knokko.customitems.NameHelper;

public enum CIEntityType {

	ELDER_GUARDIAN(VERSION1_12, VERSION1_17),
	WITHER_SKELETON(VERSION1_12, VERSION1_17),
	STRAY(VERSION1_12, VERSION1_17),
	HUSK(VERSION1_12, VERSION1_17),
	ZOMBIE_VILLAGER(VERSION1_12, VERSION1_17),
	SKELETON_HORSE(VERSION1_12, VERSION1_17),
	ZOMBIE_HORSE(VERSION1_12, VERSION1_17),
	ARMOR_STAND(VERSION1_12, VERSION1_17),
	DONKEY(VERSION1_12, VERSION1_17),
	MULE(VERSION1_12, VERSION1_17),
	EVOKER(VERSION1_12, VERSION1_17),
	VEX(VERSION1_12, VERSION1_17),
	VINDICATOR(VERSION1_12, VERSION1_17),
	ILLUSIONER(VERSION1_12, VERSION1_17),
	CREEPER(VERSION1_12, VERSION1_17),
	SKELETON(VERSION1_12, VERSION1_17),
	SPIDER(VERSION1_12, VERSION1_17),
	GIANT(VERSION1_12, VERSION1_17),
	ZOMBIE(VERSION1_12, VERSION1_17),
	SLIME(VERSION1_12, VERSION1_17),
	GHAST(VERSION1_12, VERSION1_17),
	PIG_ZOMBIE(VERSION1_12, VERSION1_15),
	ENDERMAN(VERSION1_12, VERSION1_17),
	CAVE_SPIDER(VERSION1_12, VERSION1_17),
	SILVERFISH(VERSION1_12, VERSION1_17),
	BLAZE(VERSION1_12, VERSION1_17),
	MAGMA_CUBE(VERSION1_12, VERSION1_17),
	ENDER_DRAGON(VERSION1_12, VERSION1_17),
	WITHER(VERSION1_12, VERSION1_17),
	BAT(VERSION1_12, VERSION1_17),
	WITCH(VERSION1_12, VERSION1_17),
	ENDERMITE(VERSION1_12, VERSION1_17),
	GUARDIAN(VERSION1_12, VERSION1_17),
	SHULKER(VERSION1_12, VERSION1_17),
	PIG(VERSION1_12, VERSION1_17),
	SHEEP(VERSION1_12, VERSION1_17),
	COW(VERSION1_12, VERSION1_17),
	CHICKEN(VERSION1_12, VERSION1_17),
	SQUID(VERSION1_12, VERSION1_17),
	WOLF(VERSION1_12, VERSION1_17),
	MUSHROOM_COW(VERSION1_12, VERSION1_17),
	SNOWMAN(VERSION1_12, VERSION1_17),
	OCELOT(VERSION1_12, VERSION1_17),
	IRON_GOLEM(VERSION1_12, VERSION1_17),
	HORSE(VERSION1_12, VERSION1_17),
	RABBIT(VERSION1_12, VERSION1_17),
	POLAR_BEAR(VERSION1_12, VERSION1_17),
	LLAMA(VERSION1_12, VERSION1_17),
	PARROT(VERSION1_12, VERSION1_17),
	VILLAGER(VERSION1_12, VERSION1_17),
	PLAYER(VERSION1_12, VERSION1_17),
	NPC(VERSION1_12, VERSION1_17), // NPC is a kinda special entity type...
	TURTLE(VERSION1_13, VERSION1_17),
	PHANTOM(VERSION1_13, VERSION1_17),
	COD(VERSION1_13, VERSION1_17),
	SALMON(VERSION1_13, VERSION1_17),
	PUFFERFISH(VERSION1_13, VERSION1_17),
	TROPICAL_FISH(VERSION1_13, VERSION1_17),
	DROWNED(VERSION1_13, VERSION1_17),
	DOLPHIN(VERSION1_13, VERSION1_17),
	CAT(VERSION1_14, VERSION1_17),
	PANDA(VERSION1_14, VERSION1_17),
	PILLAGER(VERSION1_14, VERSION1_17),
	RAVAGER(VERSION1_14, VERSION1_17),
	TRADER_LLAMA(VERSION1_14, VERSION1_17),
	WANDERING_TRADER(VERSION1_14, VERSION1_17),
	FOX(VERSION1_14, VERSION1_17),
	BEE(VERSION1_15, VERSION1_17),
	ZOMBIFIED_PIGLIN(VERSION1_16, VERSION1_17),
	HOGLIN(VERSION1_16, VERSION1_17),
	PIGLIN(VERSION1_16, VERSION1_17),
	STRIDER(VERSION1_16, VERSION1_17),
	ZOGLIN(VERSION1_16, VERSION1_17),
	PIGLIN_BRUTE(VERSION1_17, VERSION1_17),
	AXOLOTL(VERSION1_17, VERSION1_17),
	GLOW_ITEM_FRAME(VERSION1_17, VERSION1_17),
	GLOW_SQUID(VERSION1_17, VERSION1_17),
	GOAT(VERSION1_17, VERSION1_17),
	MARKER(VERSION1_17, VERSION1_17);
	
	private static final CIEntityType[] ALL_TYPES = values();
	
	public static final int AMOUNT = ALL_TYPES.length;
	
	public static CIEntityType getByOrdinal(int ordinal) {
		return ALL_TYPES[ordinal];
	}
	
	/**
	 * Do NOT use this on players! The NPC case needs to be handled differently!
	 */
	public static CIEntityType fromBukkitEntityType(Enum<?> entityType) {
		try {
			return valueOf(entityType.name());
		} catch (IllegalArgumentException ex) {
			return null;
		}
	}
	
	public final int firstVersion, lastVersion;
	
	CIEntityType(int firstMcVersion, int lastMcVersion) {
		this.firstVersion = firstMcVersion;
		this.lastVersion = lastMcVersion;
	}
	
	@Override
	public String toString() {
		return NameHelper.getNiceEnumName(name(), firstVersion, lastVersion);
	}
}
